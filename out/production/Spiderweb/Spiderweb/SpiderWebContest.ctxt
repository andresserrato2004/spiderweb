#BlueJ class context
comment0.target=SpiderWebContest
comment1.params=x\ val
comment1.target=int\ updateMin(int,\ int)
comment1.text=\r\n\ updateMin\ es\ una\ funcion\ que\ se\ usa\ para\ actualizar\ el\ valor\ de\ un\ nodo\ del\ segment\ tree\ por\ el\ minimo\ entre\ el\ actual\ y\ el\ valor\ que\ se\ le\ pasa\r\n\r\n\ @param\ x\ \ \ es\ el\ valor\ actual\ del\ nodo\r\n\ @param\ val\ es\ el\ valor\ que\ se\ le\ quiere\ asignar\ al\ nodo\r\n\ @return\ el\ minimo\ entre\ x\ y\ val\r\n
comment10.params=strands\ favorite\ bridges
comment10.target=void\ simulate(int,\ int,\ int[][])
comment11.params=strands\ favorite\ bridges
comment11.target=int[]\ solve(int,\ int,\ int[][])
comment12.params=
comment12.target=void\ makeVisilbe()
comment13.params=
comment13.target=void\ makeInvisible()
comment14.params=
comment14.target=void\ finish()
comment15.params=
comment15.target=void\ walk()
comment2.params=l\ r\ nodoActual
comment2.target=void\ down(int,\ int,\ int)
comment2.text=\r\n\ down\ es\ una\ funcion\ que\ se\ usa\ para\ propagar\ los\ valores\ de\ los\ nodos\ del\ segment\ tree\ hacia\ sus\ hijos\ cuando\ se\ hace\ un\ update\ en\ un\ nodo\r\n\r\n\ @param\ l\ \ \ \ \ \ \ \ \ \ es\ el\ limite\ izquierdo\ del\ rango\ que\ se\ esta\ viendo\r\n\ @param\ r\ \ \ \ \ \ \ \ \ \ es\ el\ limite\ derecho\ del\ rango\ que\ se\ esta\ viendo\r\n\ @param\ nodoActual\ es\ el\ nodo\ que\ se\ esta\ viendo\r\n
comment3.params=l\ r\ nodoActual
comment3.target=void\ build(int,\ int,\ int)
comment3.text=\r\n\ build\ es\ una\ funcion\ que\ se\ usa\ para\ construir\ el\ segment\ tree\ con\ los\ valores\ iniciales\ de\ los\ nodos\ hoja\ que\ son\ los\ hilos\ de\ la\ telara\u00F1a\r\n\ en\ los\ nodos\ hoja,\ min_dec\ y\ min_inc\ son\ la\ distancia\ minima\ de\ un\ hilo\ a\ s\ sin\ puentes\ inicialmente\r\n\r\n\ @param\ l\ \ \ \ \ \ \ \ \ \ es\ el\ limite\ izquierdo\ del\ rango\ que\ se\ esta\ viendo\r\n\ @param\ r\ \ \ \ \ \ \ \ \ \ es\ el\ limite\ derecho\ del\ rango\ que\ se\ esta\ viendo\r\n\ @param\ nodoActual\ es\ el\ nodo\ que\ se\ esta\ viendo\r\n
comment4.params=L\ R\ l\ r\ nodoActual\ v\ type
comment4.target=void\ modify(int,\ int,\ int,\ int,\ int,\ int,\ int)
comment4.text=\r\n\ modify\ es\ una\ funcion\ que\ se\ usa\ para\ modificar\ los\ valores\ de\ los\ nodos\ del\ segment\ tree\ en\ un\ rango\ determinado\ con\ un\ valor\ determinado\r\n\r\n\ @param\ L\ \ \ \ \ \ \ \ \ \ Representa\ el\ l\u00EDmite\ izquierdo\ del\ rango\ en\ el\ que\ se\ realizar\u00E1\ la\ modificaci\u00F3n.\r\n\ @param\ R\ \ \ \ \ \ \ \ \ \ Representa\ el\ l\u00EDmite\ derecho\ del\ rango\ en\ el\ que\ se\ realizar\u00E1\ la\ modificaci\u00F3n.\r\n\ @param\ l\ \ \ \ \ \ \ \ \ \ Representa\ el\ l\u00EDmite\ izquierdo\ del\ rango\ actual\ del\ nodo\ en\ el\ \u00E1rbol\ de\ segmentos.\r\n\ @param\ r\ \ \ \ \ \ \ \ \ \ Representa\ el\ l\u00EDmite\ derecho\ del\ rango\ actual\ del\ nodo\ en\ el\ \u00E1rbol\ de\ segmentos.\r\n\ @param\ nodoActual\ Representa\ el\ \u00EDndice\ del\ nodo\ actual\ en\ el\ \u00E1rbol\ de\ segmentos.\r\n\ @param\ v\ \ \ \ \ \ \ \ \ \ Es\ el\ valor\ con\ el\ que\ se\ va\ a\ modificar\ el\ nodo\r\n\ @param\ type\ \ \ \ \ \ \ Es\ el\ tipo\ de\ modificaci\u00F3n\ que\ se\ va\ a\ realizar,\ si\ es\ 1\ se\ va\ a\ modificar\ el\ valor\ min_dec,\ si\ es\ 0\ se\ va\ a\ modificar\ el\ valor\ min_inc\r\n
comment5.params=x\ l\ r\ nodoActual\ v
comment5.target=void\ smodify(int,\ int,\ int,\ int,\ int)
comment5.text=\r\n\ La\ funci\u00F3n\ smodify\ se\ utiliza\ para\ modificar\ el\ valor\ de\ un\ solo\ nodo\ en\ el\ \u00E1rbol\ de\ segmentos\r\n\r\n\ @param\ x\ \ \ \ \ \ \ \ \ \ es\ el\ nodo\ que\ se\ va\ a\ modificar\r\n\ @param\ l\ \ \ \ \ \ \ \ \ \ es\ el\ limite\ izquierdo\ del\ rango\ que\ se\ esta\ viendo\r\n\ @param\ r\ \ \ \ \ \ \ \ \ \ es\ el\ limite\ derecho\ del\ rango\ que\ se\ esta\ viendo\r\n\ @param\ nodoActual\ es\ el\ nodo\ que\ se\ esta\ viendo\r\n\ @param\ v\ \ \ \ \ \ \ \ \ \ es\ el\ valor\ que\ se\ le\ va\ a\ asignar\ al\ nodo\r\n
comment6.params=x\ l\ r\ nodoActual
comment6.target=int\ query(int,\ int,\ int,\ int)
comment6.text=\r\n\ La\ funci\u00F3n\ query\ se\ utiliza\ para\ hacer\ una\ consulta\ en\ el\ \u00E1rbol\ de\ segmentos\ y\ obtener\ el\ valor\ minimo\ de\ un\ nodo\ en\ un\ rango\ determinado\r\n\r\n\ @param\ x\ \ \ \ \ \ \ \ \ \ la\ posici\u00F3n\ del\ nodo\ que\ se\ quiere\ consultar\r\n\ @param\ l\ \ \ \ \ \ \ \ \ \ el\ limite\ izquierdo\ del\ rango\ que\ se\ esta\ viendo\r\n\ @param\ r\ \ \ \ \ \ \ \ \ \ el\ limite\ derecho\ del\ rango\ que\ se\ esta\ viendo\r\n\ @param\ nodoActual\ el\ nodo\ que\ se\ esta\ viendo\r\n\ @return\ el\ valor\ minimo\ del\ nodo\ que\ se\ quiere\ consultar\r\n
comment7.params=
comment7.target=void\ initialitesegmentree()
comment8.params=bridges\ m
comment8.target=readBridges(int[][],\ int)
comment9.params=strands\ favorite\ bridges\ strand
comment9.target=void\ simulate(int,\ int,\ int[][],\ int)
comment9.text=\r\n\ La\ funci\u00F3n\ main\ es\ la\ funci\u00F3n\ principal\ del\ programa,\ en\ esta\ funci\u00F3n\ se\ lee\ la\ entrada\ del\ problema\ y\ se\ llama\ a\ las\ funciones\ necesarias\ para\ resolver\ el\ problema\r\n
numComments=16
