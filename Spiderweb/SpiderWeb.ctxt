#BlueJ class context
comment0.target=SpiderWeb
comment0.text=\r\n\ Clase\ que\ representa\ una\ red\ de\ telara\u00F1a\ con\ puentes\ y\ puntos\ de\ referencia.\r\n\ Esta\ clase\ permite\ agregar,\ eliminar\ y\ reubicar\ puentes\ y\ puntos\ de\ referencia,\r\n\ as\u00ED\ como\ tambi\u00E9n\ mover\ una\ ara\u00F1a\ a\ lo\ largo\ de\ los\ puentes.\r\n\ <p>\r\n\ La\ red\ de\ telara\u00F1a\ est\u00E1\ formada\ por\ una\ serie\ de\ l\u00EDneas\ que\ representan\ los\ brazos\r\n\ de\ la\ telara\u00F1a,\ y\ puentes\ que\ conectan\ estos\ brazos.\ Los\ puentes\ pueden\ ser\ de\ diferentes\r\n\ colores\ y\ se\ pueden\ agregar\ a\ una\ posici\u00F3n\ espec\u00EDfica\ de\ un\ brazo.\r\n\ <p>\r\n\ Los\ puntos\ de\ referencia\ son\ tambi\u00E9n\ l\u00EDneas,\ y\ se\ pueden\ agregar\ a\ un\ brazo\ para\ indicar\r\n\ un\ punto\ de\ inter\u00E9s.\r\n\r\n\ @author\ Andres\ Serrato-Zayra\ Gutierrez\r\n\ @version\ 18/02/2024\r\n
comment1.params=radio\ strands
comment1.target=SpiderWeb(int,\ int)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ spiderWeb.\r\n\ Crea\ una\ nueva\ red\ de\ telara\u00F1a\ con\ el\ radio\ y\ la\ cantidad\ de\ brazos\ especificados.\r\n\r\n\ @param\ radio\ \ \ El\ radio\ de\ la\ telara\u00F1a.\r\n\ @param\ strands\ La\ cantidad\ de\ brazos\ de\ la\ telara\u00F1a.\r\n
comment10.params=color\ distance\ firstStrand\ showMessage
comment10.target=boolean\ verifyBridge(java.lang.String,\ int,\ int,\ boolean)
comment11.params=color\ distance
comment11.target=void\ relocateBridge(java.lang.String,\ float)
comment11.text=\r\n\ Relocaliza\ un\ puente\ existente\ en\ la\ red\ de\ telara\u00F1a.\r\n\r\n\ @param\ color\ \ \ \ El\ color\ del\ puente\ que\ se\ desea\ relocalizar.\r\n\ @param\ distance\ La\ nueva\ distancia\ desde\ el\ centro\ hasta\ el\ punto\ donde\ comienza\ el\ puente.\r\n
comment12.params=color\ distance
comment12.target=void\ relocateBridgeAutomatico(java.lang.String,\ float)
comment12.text=\r\n\ Relocaliza\ autom\u00E1ticamente\ un\ puente\ en\ un\ brazo\ espec\u00EDfico\ de\ la\ red\ de\ telara\u00F1a.\r\n
comment13.params=color
comment13.target=boolean\ delBridge(java.lang.String)
comment13.text=\r\n\ Elimina\ un\ puente\ de\ la\ red\ de\ telara\u00F1a.\r\n\r\n\ @param\ color\ El\ color\ del\ puente\ que\ se\ desea\ eliminar.\r\n
comment14.params=color\ strand
comment14.target=void\ addSpot(java.lang.String,\ int)
comment14.text=\r\n\ Agrega\ un\ punto\ de\ referencia\ a\ la\ red\ de\ telara\u00F1a.\r\n\r\n\ @param\ color\ \ El\ color\ del\ punto\ de\ referencia.\r\n\ @param\ strand\ El\ n\u00FAmero\ del\ brazo\ donde\ se\ agregar\u00E1\ el\ punto\ de\ referencia.\r\n
comment15.params=spot\ color\ type
comment15.target=void\ distintive1(Spot,\ java.lang.String,\ java.lang.String)
comment16.params=type\ color\ strand
comment16.target=void\ addSpot(java.lang.String,\ java.lang.String,\ int)
comment17.params=color\ strand\ showMessage
comment17.target=boolean\ verifySpot(java.lang.String,\ int,\ boolean)
comment18.params=
comment18.target=void\ typeSpot()
comment19.params=color
comment19.target=void\ delSpot(java.lang.String)
comment19.text=\r\n\ Elimina\ un\ punto\ de\ referencia\ de\ la\ red\ de\ telara\u00F1a.\r\n\r\n\ @param\ color\ El\ color\ del\ punto\ de\ referencia\ que\ se\ desea\ eliminar.\r\n
comment2.params=strand\ favoritestrand\ bridgesData
comment2.target=SpiderWeb(int,\ int,\ int[][])
comment20.params=
comment20.target=void\ hideBridges()
comment20.text=\r\n\ Oculta\ todos\ los\ puentes\ de\ la\ red\ de\ telara\u00F1a.\r\n
comment21.params=
comment21.target=void\ showBridges()
comment21.text=\r\n\ Muestra\ todos\ los\ puentes\ de\ la\ red\ de\ telara\u00F1a.\r\n
comment22.params=strand
comment22.target=void\ spiderSit(int)
comment22.text=\r\n\ Hace\ que\ la\ ara\u00F1a\ se\ siente\ en\ un\ brazo\ espec\u00EDfico\ de\ la\ telara\u00F1a.\r\n\r\n\ @param\ strand\ El\ n\u00FAmero\ del\ brazo\ donde\ se\ desea\ que\ la\ ara\u00F1a\ se\ siente.\r\n
comment23.params=advance
comment23.target=void\ spiderWalk(boolean)
comment23.text=\r\n\ Hace\ que\ la\ ara\u00F1a\ camine\ a\ lo\ largo\ del\ brazo\ de\ la\ telara\u00F1a.\r\n\r\n\ @param\ advance\ Indica\ si\ la\ ara\u00F1a\ debe\ avanzar\ en\ el\ brazo\ o\ retroceder.\r\n
comment24.params=walk\ xAnterior\ yAnterior
comment24.target=void\ spidermove(java.util.ArrayList,\ float,\ float)
comment25.params=
comment25.target=void\ eraseRecorrido()
comment26.params=listBrigde\ strand\ xSpiderActual\ ySpiderActual
comment26.target=java.util.Map\ nextBridge(java.util.ArrayList,\ int,\ float,\ float)
comment26.text=\r\n\ Determina\ el\ siguiente\ puente\ que\ tiene\ que\ tomar\ la\ ara\u00F1a\ teniendo\ en\ cuenta\ que\ solo\ puede\ ir\ hacia\ adelante.\r\n\r\n\ @param\ listBrigde\ \ \ \ es\ una\ lista\ de\ puentes\ que\ tiene\ el\ hilo\ donde\ esta\ actualmente\ la\ ara\u00F1a\r\n\ @param\ strand\ \ \ \ \ \ \ \ es\ el\ hilo\ donde\ esta\ parada\ la\ ara\u00F1a\r\n\ @param\ xSpiderActual\ ySpiderActual\ es\ la\ posicion\ actual\ de\ la\ ara\u00F1a\ para\ poder\ calcular\ cual\ brige\r\n\ @return\ devuelve\ un\ Map\ de\ un\ elemento\ que\ indica\ si\ encontro\ el\ bridge\ y\ el\ puente\ mas\ cercano\ hacia\ adelante\ de\ la\ ara\u00F1a.\r\n
comment27.params=listBrigde\ strand\ xSpiderActual\ ySpiderActual
comment27.target=java.util.Map\ nextBridge1(java.util.ArrayList,\ int,\ float,\ float)
comment28.params=strand
comment28.target=java.util.ArrayList\ isPosible(int)
comment28.text=\r\n\ Determina\ si\ es\ posible\ avanzar\ a\ lo\ largo\ del\ brazo\ de\ la\ telara\u00F1a\ desde\ una\ posici\u00F3n\ dada\ hasta\ el\ primer\ puente\ encontrado.\r\n\r\n\ @param\ strand\ El\ n\u00FAmero\ del\ brazo\ de\ la\ telara\u00F1a\ desde\ el\ que\ se\ quiere\ comprobar\ si\ es\ posible\ avanzar.\r\n\ @return\ Una\ lista\ de\ listas\ de\ enteros\ que\ representan\ los\ puntos\ a\ lo\ largo\ del\ brazo\ de\ la\ telara\u00F1a\ hasta\ el\ primer\ puente\ encontrado.\r\n
comment29.params=strand
comment29.target=java.util.ArrayList\ isPosible1(int)
comment3.params=
comment3.target=void\ cordenates()
comment3.text=\r\n\ Calcula\ las\ coordenadas\ de\ los\ brazos\ de\ la\ telara\u00F1a\ y\ crea\ l\u00EDneas\ para\ representarlos.\r\n
comment30.params=
comment30.target=java.util.ArrayList\ reachableSpot()
comment30.text=\r\n\ Devuelve\ una\ lista\ de\ colores\ de\ los\ spots\ que\ son\ alcanzables\ desde\ la\ posici\u00F3n\ actual\ de\ la\ ara\u00F1a\ en\ la\ telara\u00F1a.\r\n\r\n\ @return\ Una\ lista\ de\ cadenas\ que\ representan\ los\ colores\ de\ los\ spots\ alcanzables\ desde\ la\ posici\u00F3n\ actual\ de\ la\ ara\u00F1a.\r\n
comment31.params=
comment31.target=java.lang.String[]\ bridges()
comment31.text=\r\n\ Devuelve\ una\ lista\ de\ los\ colores\ de\ los\ puentes\ en\ la\ red\ de\ telara\u00F1a.\r\n\r\n\ @return\ Una\ lista\ de\ los\ colores\ de\ los\ puentes.\r\n
comment32.params=
comment32.target=java.lang.String[]\ spots()
comment32.text=\r\n\ Devuelve\ una\ lista\ de\ los\ colores\ de\ los\ spots\ en\ la\ red\ de\ telara\u00F1a.\r\n\r\n\ @return\ Una\ lista\ de\ los\ colores\ de\ los\ spots.\r\n
comment33.params=color
comment33.target=int\ spot(java.lang.String)
comment33.text=\r\n\ Devuelve\ el\ n\u00FAmero\ del\ brazo\ donde\ se\ encuentra\ un\ punto\ de\ referencia\ dado\ su\ color.\r\n\r\n\ @param\ color\ El\ color\ del\ punto\ de\ referencia.\r\n\ @return\ El\ n\u00FAmero\ del\ brazo\ donde\ se\ encuentra\ el\ punto\ de\ referencia,\r\n
comment34.params=color
comment34.target=int[]\ bridge(java.lang.String)
comment34.text=\r\n\ Retorna\ una\ lista\ de\ hilos\ (strands)\ en\ los\ cuales\ se\ encuentra\ un\ puente\ dado\ su\ color.\r\n\r\n\ @param\ color\ El\ color\ del\ puente.\r\n\ @return\ Una\ lista\ de\ enteros\ que\ representan\ los\ hilos\ donde\ se\ encuentra\ el\ puente.\r\n
comment35.params=
comment35.target=void\ addStrand()
comment35.text=\r\n\ Agrega\ un\ nuevo\ brazo\ a\ la\ red\ de\ telara\u00F1a.\r\n\ <p>\r\n\ Este\ m\u00E9todo\ incrementa\ el\ n\u00FAmero\ de\ brazos\ en\ la\ red\ de\ telara\u00F1a,\ recalcula\ las\ coordenadas\r\n\ de\ los\ brazos\ con\ el\ nuevo\ n\u00FAmero\ de\ brazos\ y\ hace\ visible\ nuevamente\ la\ red\ de\ telara\u00F1a.\r\n
comment36.params=porcentage
comment36.target=boolean\ enlarge(int)
comment36.text=\r\n\ Aumenta\ el\ tama\u00F1o\ de\ la\ red\ de\ telara\u00F1a\ seg\u00FAn\ un\ porcentaje\ dado.\r\n\r\n\ @param\ porcentage\ El\ porcentaje\ por\ el\ cual\ se\ aumentar\u00E1\ el\ tama\u00F1o\ de\ la\ red.\r\n
comment37.params=
comment37.target=java.lang.String[]\ unUsedBridges()
comment37.text=\r\n\ Devuelve\ una\ lista\ de\ puentes\ sin\ usar\ en\ la\ red\ de\ telara\u00F1a.\r\n\r\n\ @return\ Una\ lista\ de\ cadenas\ que\ representan\ los\ colores\ de\ los\ puentes\ sin\ usar.\r\n
comment38.params=
comment38.target=int[]\ spiderLastPath()
comment38.text=\r\n\ Obtiene\ el\ listado\ de\ los\ hilos\ tomados\ por\ la\ ara\u00F1a\ la\ \u00FAltima\ vez\ que\ camin\u00F3.\r\n\r\n\ @return\ Una\ lista\ de\ enteros\ que\ representan\ los\ n\u00FAmeros\ de\ los\ brazos\ tomados\ por\ la\ ara\u00F1a.\r\n
comment39.params=
comment39.target=void\ finish()
comment39.text=\r\n\ Finaliza\ la\ clase\ y\ realiza\ las\ operaciones\ necesarias\ para\ limpiar\ los\ datos\ y\ hacer\ invisible\ la\ telara\u00F1a\ y\ la\ ara\u00F1a.\r\n\ Cierra\ la\ ventana.\r\n
comment4.params=
comment4.target=void\ makeVisible()
comment4.text=\r\n\ Hace\ visible\ la\ red\ de\ telara\u00F1a\ y\ todos\ los\ elementos.\r\n\ Si\ la\ red\ no\ ha\ sido\ visible\ antes,\ muestra\ las\ l\u00EDneas\ de\ los\ brazos\r\n\ y\ una\ ara\u00F1a\ en\ el\ centro.\ Si\ ya\ ha\ sido\ visible,\ simplemente\ hace\ visible\r\n\ nuevamente\ los\ elementos.\r\n
comment40.params=
comment40.target=int\ getClosestSpot()
comment41.params=
comment41.target=boolean\ ok()
comment41.text=\r\n\ Devuelve\ el\ estado\ de\ los\ metodos.\r\n\r\n\ @return\ {@code\ true}\ si\ la\ ara\u00F1a\ est\u00E1\ en\ un\ estado\ v\u00E1lido\ para\ continuar\ con\ las\ operaciones,\r\n\ {@code\ false}\ de\ lo\ contrario.\r\n
comment42.params=
comment42.target=int\ getRadio()
comment43.params=
comment43.target=boolean\ isSpiderLive()
comment44.params=
comment44.target=int\ getStrandFinish()
comment5.params=
comment5.target=void\ makeInvisible()
comment5.text=\r\n\ Hace\ invisible\ la\ red\ de\ telara\u00F1a\ y\ todos\ los\ elementos.\r\n\ Oculta\ todas\ las\ l\u00EDneas\ y\ los\ puentes\ de\ la\ red\ de\ telara\u00F1a.\r\n
comment6.params=color\ distance\ firstStrand
comment6.target=void\ addBridge(java.lang.String,\ int,\ int)
comment6.text=\r\n\ Agrega\ un\ puente\ a\ la\ red\ de\ telara\u00F1a.\r\n\r\n\ @param\ color\ \ \ \ \ \ \ El\ color\ del\ puente.\r\n\ @param\ distance\ \ \ \ La\ distancia\ desde\ el\ centro\ hasta\ el\ punto\ donde\ comienza\ el\ puente.\r\n\ @param\ firstStrand\ El\ n\u00FAmero\ del\ brazo\ donde\ se\ conectar\u00E1\ el\ puente.\r\n
comment7.params=type\ color\ distance\ firstStrand
comment7.target=void\ addBridge(java.lang.String,\ java.lang.String,\ int,\ int)
comment8.params=bridge\ color
comment8.target=void\ distintive(Bridges,\ java.lang.String)
comment9.params=istypebridge
comment9.target=void\ TypeBridge(boolean)
numComments=45
